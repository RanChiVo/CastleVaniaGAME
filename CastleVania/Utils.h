#pragma once
#include <unordered_map>
#include "EntityID.h"

void eraseAllSubStr(std::string & mainStr, const std::string & toErase);

void findAndReplaceAll(std::string & data, std::string toSearch, std::string replaceStr);

class Utils
{
	Utils();
	static Utils* _instance;
	std::unordered_map<std::string, EntityID> stringToEntityID = {
		{"ID_ENTITY_SIMON",EntityID::ID_ENTITY_SIMON },
		{"ID_ENTITY_MAINMENU",EntityID::ID_ENTITY_MAINMENU },
		{"ID_ENTITY_WHIP",EntityID::ID_ENTITY_WHIP },
		{"ID_ENTITY_BURNBARREL",EntityID::ID_ENTITY_BURNBARREL },
		{"ID_ENTITY_BBOX",EntityID::ID_ENTITY_BBOX },
		{"ID_ENTITY_PORK_CHOP",EntityID::ID_ENTITY_PORK_CHOP },
		{"ID_ENTITY_HEART",EntityID::ID_ENTITY_HEART },
		{"ID_ENTITY_EFFECT",EntityID::ID_ENTITY_EFFECT },
		{"ID_ENTITY_WEAPON_REWARD",EntityID::ID_ENTITY_WEAPON_REWARD },
		{"ID_ENTITY_DAGGER",EntityID::ID_ENTITY_DAGGER },
		{"ID_ENTITY_AXE",EntityID::ID_ENTITY_AXE },
		{"ID_ENTITY_MIRACULOUS_BAG",EntityID::ID_ENTITY_MIRACULOUS_BAG },
		{"ID_ENTITY_RED_100_MIRACULOUS_BAG",EntityID::ID_ENTITY_RED_100_MIRACULOUS_BAG},
		{"ID_ENTITY_BLUE_400_MIRACULOUS_BAG",EntityID::ID_ENTITY_BLUE_400_MIRACULOUS_BAG},
		{"ID_ENTITY_WHITE_700_MIRACULOUS_BAG",EntityID::ID_ENTITY_WHITE_700_MIRACULOUS_BAG},
		{"ID_ENTITY_BONUS_1000_MIRACULOUS_BAG",EntityID::ID_ENTITY_BONUS_1000_MIRACULOUS_BAG},
		{"ID_ENTITY_BRICK",EntityID::ID_ENTITY_BRICK },
		{"ID_ENTITY_FLOOR",EntityID::ID_ENTITY_FLOOR },
		{"ID_ENTITY_ENTRANCE",EntityID::ID_ENTITY_ENTRANCE },
		{"ID_ENTITY_DAGGER_WEAPON",EntityID::ID_ENTITY_DAGGER_WEAPON },
		{"ID_ENTITY_MAP_ENTRANCE",EntityID::ID_ENTITY_MAP_ENTRANCE },
		{"ID_ENTITY_MAP_MAIN_HALL",EntityID::ID_ENTITY_MAP_MAIN_HALL },
		{"ID_ENTITY_MAP_PLAYGAME",EntityID::ID_ENTITY_MAP_PLAYGAME },
		{"ID_ENTITY_CASTLEVANIA_WALL",EntityID::ID_ENTITY_CASTLEVANIA_WALL },
		{"ID_ENTITY_CANDLE",EntityID::ID_ENTITY_CANDLE },
		{"ID_ENTITY_PODIUM_ON_WALL",EntityID::ID_ENTITY_PODIUM_ON_WALL },
		{"ID_ENTITY_WALL_ENTRANCE",EntityID::ID_ENTITY_WALL_ENTRANCE },
		{"ID_ENTITY_MOVING_MAP",EntityID::ID_ENTITY_MOVING_MAP },
		{"ID_ENTITY_DOOR",EntityID::ID_ENTITY_DOOR },
		{"ID_ENTITY_STAIR",EntityID::ID_ENTITY_STAIR },
		{"ID_ENTITY_ZOMBIE",EntityID::ID_ENTITY_ZOMBIE },
		{"ID_ENTITY_SMALL_HEART",EntityID::ID_ENTITY_SMALL_HEART },
		{"ID_ENTITY_CROSS",EntityID::ID_ENTITY_CROSS },
		{"ID_ENTITY_FIRE_BOMB",EntityID::ID_ENTITY_FIRE_BOMB },
		{"ID_ENTITY_FIRE_BOMP_WEAPON",EntityID::ID_ENTITY_FIRE_BOMP_WEAPON },
		{"ID_ENTITY_INVISIBILITY_POTION",EntityID::ID_ENTITY_INVISIBILITY_POTION },
		{"ID_ENTITY_STOP_WATCH",EntityID::ID_ENTITY_STOP_WATCH },
		{"ID_ENTITY_BOOMERANG",EntityID::ID_ENTITY_BOOMERANG },


		{"ID_ENTITY_HP", EntityID::ID_ENTITY_HP },
		{"ID_ENTITY_HP_ENEMY", EntityID::ID_ENTITY_HP_ENEMY },
		{"ID_ENTITY_LOST_HP", EntityID::ID_ENTITY_LOST_HP },
		{"ID_ENTITY_PLACE", EntityID::ID_ENTITY_PLACE},
		{"ID_ENTITY_PANTHER", EntityID::ID_ENTITY_PANTHER},
		{"ID_ENTITY_VAMPIRE_BAT", EntityID::ID_ENTITY_VAMPIRE_BAT},
		{"ID_ENTITY_FISH_MAN", EntityID::ID_ENTITY_FISH_MAN},
		{"ID_ENTITY_CRYSTAL_BALL", EntityID::ID_ENTITY_CRYSTAL_BALL},
		{"ID_ENTITY_MENU", EntityID::ID_ENTITY_MENU},
		{"ID_ENTITY_PORTAL", EntityID::ID_ENTITY_PORTAL},
		{"ID_ENTITY_SPAWN_ENEMY", EntityID::ID_ENTITY_SPAWN_ENEMY},
		{"ID_ENTITY_DARK_BAT", EntityID::ID_ENTITY_DARK_BAT},
		{"ID_ENTITY_BALL_DARK_BAT", EntityID::ID_ENTITY_BALL_DARK_BAT},
	};

	std::unordered_map<std::string, ANI_ID> stringToAniID = {
		{"SIMON_ANI_IDLE", ANI_ID::SIMON_ANI_IDLE },
		{"SIMON_ANI_WALKING", ANI_ID::SIMON_ANI_WALKING},
		{"SIMON_ANI_JUMPING", ANI_ID::SIMON_ANI_JUMPING},
		{"SIMON_ANI_SITDOWN", ANI_ID::SIMON_ANI_SITDOWN},
		{"SIMON_ANI_ATTACK_STANDING", ANI_ID::SIMON_ANI_ATTACK_STANDING},
		{"SIMON_ANI_ATTACK_SITDOWN", ANI_ID::SIMON_ANI_ATTACK_SITDOWN},
		{"SIMON_ANI_COLOR", ANI_ID::SIMON_ANI_COLOR},
		{"SIMON_ANI_COLOR1", ANI_ID::SIMON_ANI_COLOR1},
		{"SIMON_ANI_HURT", ANI_ID::SIMON_ANI_HURT},
		{"SIMON_ANI_DEAD", ANI_ID::SIMON_ANI_DEAD},
		{"TYPE1_WHIP",ANI_ID::TYPE1_WHIP},
		{"TYPE2_WHIP", ANI_ID::TYPE2_WHIP},
		{"TYPE3_WHIP",ANI_ID::TYPE3_WHIP},
		{"TYPE4_WHIP",ANI_ID::TYPE4_WHIP},
		{"BURNBARREL_ANI", ANI_ID::BURNBARREL_ANI},
		{"CANDLE_ANI", ANI_ID::CANDLE_ANI},
		{"ANI_EFFECT", ANI_ID::ANI_EFFECT},
		{"ANI_EFFECT_WATER", ANI_ID::ANI_EFFECT_WATER},
		{"ANI_EFFECT_BRICK", ANI_ID::ANI_EFFECT_BRICK},
		{"ANI_EFFECT_STAR", ANI_ID::ANI_EFFECT_STAR},
		{"ANI_EFFECT_FIRE_DARK_BAT", ANI_ID::ANI_EFFECT_FIRE_DARK_BAT},
		{"EFFECT_100_MONEY_ANI", ANI_ID::EFFECT_100_MONEY_ANI},
		{"EFFECT_400_MONEY_ANI", ANI_ID::EFFECT_400_MONEY_ANI},
		{"EFFECT_700_MONEY_ANI", ANI_ID::EFFECT_700_MONEY_ANI},
		{"EFFECT_1000_MONEY_ANI", ANI_ID::EFFECT_1000_MONEY_ANI},
		{"HEART_ANI", ANI_ID::HEART_ANI},
		{"PORK_CHOP_ANI", ANI_ID::PORK_CHOP_ANI},
		{"WEAPONREWARD_ANI", ANI_ID::WEAPONREWARD_ANI},
		{"DAGGER_ANI", ANI_ID::DAGGER_ANI},
		{"AXE_ANI_ITEM", ANI_ID::AXE_ANI_ITEM},
		{"AXE_ANI_THROW", ANI_ID::AXE_ANI_THROW},
		{"RED_MIRACULOUSBAG_ANI", ANI_ID::RED_MIRACULOUSBAG_ANI},
		{"BLUE_MIRACULOUSBAG_ANI", ANI_ID::BLUE_MIRACULOUSBAG_ANI},
		{"WHITE_MIRACULOUSBAG_ANI", ANI_ID::WHITE_MIRACULOUSBAG_ANI},
		{"BONUS_MIRACULOUSBAG_ANI", ANI_ID::BONUS_MIRACULOUSBAG_ANI},
		{"CASTLE_ANI", ANI_ID::CASTLE_ANI},
		{"SIMON_ANI_GO_UP_STAIR", ANI_ID::SIMON_ANI_GO_UP_STAIR},
		{"SIMON_ANI_GO_DOWN_STAIR", ANI_ID::SIMON_ANI_GO_DOWN_STAIR},
		{"SIMON_ANI_IDLE_GO_UP_STAIR", ANI_ID::SIMON_ANI_IDLE_GO_UP_STAIR},
		{"SIMON_ANI_IDLE_GO_DOWN_STAIR", ANI_ID::SIMON_ANI_IDLE_GO_DOWN_STAIR},
		{"SIMON_ANI_ATTACK_UP_STAIR", ANI_ID::SIMON_ANI_ATTACK_UP_STAIR},
		{"SIMON_ANI_ATTACK_DOWN_STAIR", ANI_ID::SIMON_ANI_ATTACK_DOWN_STAIR},
		{"ZOMBIE_ANI_WALKING", ANI_ID::ZOMBIE_ANI_WALKING},
		{"PANTHER_ANI_IDLE", ANI_ID::PANTHER_ANI_IDLE},
		{"PANTHER_ANI_MOVE", ANI_ID::PANTHER_ANI_MOVE},
		{"PANTHER_ANI_JUMP", ANI_ID::PANTHER_ANI_JUMP},
		{"VAMPIRE_BAT_IDLE_ANI1", ANI_ID::VAMPIRE_BAT_IDLE_ANI1},
		{"VAMPIRE_BAT_FLY_ANI1", ANI_ID::VAMPIRE_BAT_FLY_ANI1},
		{"VAMPIRE_BAT_FLY_ANI2", ANI_ID::VAMPIRE_BAT_FLY_ANI2},
		{"VAMPIRE_BAT_FLY_ANI3", ANI_ID::VAMPIRE_BAT_FLY_ANI3},
		{"DARK_BAT_IDLE_ANI", ANI_ID::DARK_BAT_IDLE_ANI},
		{"DARK_BAT_FLY_ANI", ANI_ID::DARK_BAT_FLY_ANI},
		{"BALL_DARK_BALL_ANI", ANI_ID::BALL_DARK_BALL_ANI},
		{"SMALL_HEART_ANI", ANI_ID::SMALL_HEART_ANI},
		{"STOP_WATCH_ANI", ANI_ID::STOP_WATCH_ANI},
		{"CROSS_ANI", ANI_ID::CROSS_ANI},
		{"FIRE_BOMB_ANI", ANI_ID::FIRE_BOMB_ANI},
		{"OPEN_ANI", ANI_ID::OPEN_ANI},
		{"CLOSE_ANI", ANI_ID::CLOSE_ANI},
		{"OPENING_ANI", ANI_ID::OPENING_ANI},
		{"CLOSING_ANI", ANI_ID::CLOSING_ANI},
		{"BRICK_ANI1", ANI_ID::BRICK_ANI1},
		{"BRICK_ANI2", ANI_ID::BRICK_ANI2},
		{"BRICK_ANI3", ANI_ID::BRICK_ANI3},
		{"BRICK_ANI4", ANI_ID::BRICK_ANI4},
		{"FISH_MAN_ANI_IDLE", ANI_ID::FISH_MAN_ANI_IDLE},
		{"FISH_MAN_ANI_WALK", ANI_ID::FISH_MAN_ANI_WALK},
		{"FISH_MAN_ANI_SHOOT", ANI_ID::FISH_MAN_ANI_SHOOT},
		{"CRYSTAL_BALL_ANI", ANI_ID::CRYSTAL_BALL_ANI},
		{"FIRE_BOMP_ANI1", ANI_ID::FIRE_BOMP_ANI1},
		{"FIRE_BOMP_ANI2", ANI_ID::FIRE_BOMP_ANI2},
		{"FIRE_BOMP_ANI3", ANI_ID::FIRE_BOMP_ANI3},
		{"FIRE_BOMP_ANI4", ANI_ID::FIRE_BOMP_ANI4},
		{"FIRE_BOMP_ANI5", ANI_ID::FIRE_BOMP_ANI5},
		{"BOOMERANG_ITEM_ANI", ANI_ID::BOOMERANG_ITEM_ANI},
		{"BOOMERANG_WEAPON_ANI", ANI_ID::BOOMERANG_WEAPON_ANI},
		{"INVISIBILITY_POTION_ANI", ANI_ID::INVISIBILITY_POTION_ANI},
	};

	public:
		static Utils* getInstance();
		std::unordered_map<std::string, EntityID> getStringToEntityID() { return stringToEntityID; }
		std::unordered_map<std::string, ANI_ID> getStringToAniID() { return stringToAniID; }
};
